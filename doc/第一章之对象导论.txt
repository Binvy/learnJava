第一章 对象导论

一、抽象过程
	
	Alan Kay：
	第一个成功的面向对象语言、同时也是Java所基于的语言之一的Smalltalk的五个基本特征，这些特性表现了一种纯粹的面向对象程序设计方式：
		1. 万物皆对象
			理论上讲，可以抽取待解问题的任何概念化构件（狗、建筑物、服务等），将其表示为程序中的对象。

		2. 程序是对象的集合，它们通过发送消息来告知彼此所要做的。

		3. 每个对象都有自己的由其他对象构成的存储。

		4. 每个对象都拥有其类型。

		5. 某个特定类型的所有对象都可以接受同样的消息。

	Booch
	对象具有状态、行为、标识。（内部数据、方法、在内存中唯一的地址）

二、每个对象都有一个接口
	
三、每个对象都提供服务

四、被隐藏的具体实现
	
	访问权限：
		存在原因：
			1. 让客户端程序员无法触及他们不该触及的部分。
			2. 允许库设计者可以改变类内部的工作方式而不用担心会影响到客户端程序员。

	Java中在类内部设定边际的关键词：
		public： 
			紧随其后的元素对任何人都是可用的。
		private：
			除类型创建者和类型的内部方法之外任何人都不能访问。
		protected：
			与private相当，差别在于继承的类可以访问protected成员，但是不能访问private成员。
		默认（不加任何修饰词）：
			包访问权限，类可以访问在同一个包（库构件）中的其他类的成员，但是包之外，如同指定private一样。

五、复用具体实现
	
六、继承
	
七、伴随多态的可互换对象
	
八、单根继承结构
	
	在Java中（包括除C++以外的所有OOP语言），所有的类都继承自单一的基类：Object。

九、容器
	
	Java标准类库中的容器：
		List（用于存储序列）、Map（关联数组，用来建立对象之间的关联）、Set（每种对象支持有一个）、队列、树、堆栈等

	参数化类型（泛型）：
		e.g.:
			ArrayList<Object> objectArray = new ArrayList<Object>();

十、对象的创建和生命周期
	
	Java完全采用了动态内存分配方式。每当想要创建新对象时，就要使用new关键字来构建此对象的动态实例（基本类型只是一种特例）

十一、异常处理：处理错误

十二、并发编程

	某个任务锁定某项资源，完成其任务，然后释放资源锁，使其他任务可以使用这项资源。

十三、Java与Internate
	
	1. Web是什么？

		客户/服务器计算技术
		Web就是一台巨型服务器
	
	2. 客户端编程

		插件
			允许专家级的程序员不需经过浏览器生产厂商的许可，就可以开发某种语言扩展，并将他们添加到服务器中。

		脚本语言
			主要用来创建更丰富、更具有交互性的图形化用户界面（graphic user interface， GUI）,如JavaScript。

		Java
			功能强大、安全、跨平台、国际化，而且还在不断地被扩展，以提供更多的语言功能和类库，能够优雅地处理在传统编程语言中很难解决的问题，如并发、数据库访问、网络编程、分布式计算等。

		备选方案
			Flex

		.NET和C#

		Internet和Intranet
			Intranet（企业内部网）比Internet提供了更高的安全性，因为可以物理地控制对公司内部服务器的访问。

	3. 服务器端编程

		过去，服务器端编程都是通过使用Perl、Python、C++或某种语言编写CGI程序来实现的，但却造成了从此以后更加复杂的i型同，其中就包括基于Java的Web服务器，他让用servlet及其衍生物JSP来实现服务器端编程。



